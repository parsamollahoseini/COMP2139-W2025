@using Microsoft.EntityFrameworkCore
@model IEnumerable<COMP2139_ICE.Areas.ProjectManagement.Models.ProjectTask>

@* Razor Block *@
@{
    ViewBag.Title = "Task list";
    
    bool searchPerformed = ViewData["SearchPerformed"] as bool? ?? false;
    string SearchString = ViewData["SearchString"] as string;
}

<h2>@ViewData["Title"]</h2>

@if (Model.Any())
{

    //Iterate through project
    <table class="table">
        <thead>
        <tr>
            <th>Task ID</th>
            <th>Title</th>
            <th>Description</th>
            <th>Project ID</th>
            <th>Actions</th>
        </tr>
        </thead>

        <tbody>
        <!-- For each project iterate over the project, displaying project details -->
        @foreach (var Task in Model)
        {
            <tr>
                <td>@Task.ProjectTaskId</td>
                <td>@Task.Title</td>
                <td>@Task.Description</td>
                <td>
                    <a asp-controller="Projects" asp-action="Edit" asp-route-id="@Task.ProjectTaskId" class="btn btn-warning">Edit</a>
                </td>
                <td>
                    <a asp-controller="Projects" asp-action="Details" asp-route-id="@Task.ProjectTaskId" class="btn btn-info">Details</a>
                </td>
                <td>
                    <a asp-controller="Projects" asp-action="Delete" asp-route-id="@Task.ProjectTaskId" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    if (searchPerformed)
    {
        <p>No Task with search string "@SearchString" found</p>
    }
    else
    {
        <p>No projects available</p>

    }
}
<a asp-controller="ProjectTask"  asp-action="Create" asp-route-projectId="@ViewBag.ProjectId" class="btb btn-success" > Create new task  </a>
    <a asp-controller="Projects"  asp-action="Index" class="btb btn-primary"> Back to Projects</a>

